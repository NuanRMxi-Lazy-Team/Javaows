plugins {
    id 'java'
    id 'application'
    id("org.beryx.runtime") version "2.0.0"
    id 'maven-publish'
    id 'com.github.breadmoirai.github-release' version '2.5.2'

}

group = 'cn.moerain'
version = '3.1-Test'

repositories {
    mavenCentral()
    maven { url 'https://nexus.capricasoftware.co.uk/content/repositories/releases' }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

dependencies {

    implementation 'com.vladsch.flexmark:flexmark-all:0.64.8'
    implementation 'org.apache.poi:poi:5.4.1'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'org.apache.poi:poi-ooxml:5.4.1'
    implementation 'org.apache.xmlbeans:xmlbeans:5.2.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.1'
    implementation 'uk.co.caprica:vlcj:4.8.2'
    implementation 'org.json:json:20231013'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'cn.moerain.javaows.ToolLauncher' // 见下文
}

// 绿色发行包（Windows / Linux / macOS 一键生成）
//runtime {
//    options = ['--strip-debug', '--no-header-files', '--no-man-pages']
//    imageZip = file("$buildDir/image/Javaows.zip")
//}

runtime {
    options = ['--strip-debug',
               '--no-header-files', '--no-man-pages']

    // 给三大平台分别打 image
    targetPlatform('win', System.getenv('WIN_JDK'))   // Windows x64
    targetPlatform('linux', System.getenv('LINUX_JDK'))
    targetPlatform('mac', System.getenv('MAC_JDK'))

    imageZip = file("$buildDir/image/Javaows.zip")
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

// 2. 发布到 GitHub Releases
if (hasProperty('release_token') || System.getenv('RELEASE_TOKEN')) {
    githubRelease {
        token = findProperty('release_token') ?: System.getenv('RELEASE_TOKEN')
        owner = 'NuanRMxi-Lazy-Team'
        repo  = 'Javaows'
        tagName = "v${version}"
        releaseName = "v${version}"
        // ✅ 发布 runtime 压缩包
        releaseAssets = layout.buildDirectory.file("image/Javaows.zip")
        draft = false
        prerelease = false
    }
}
// 3. 让 ./gradlew publish 执行完后再上传 Release
publish.dependsOn githubRelease
println(">>> token=" + (findProperty("github_token") ?: System.getenv("GITHUB_TOKEN")))